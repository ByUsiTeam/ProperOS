require "import"; --我强迫症

import "android.text.Spannable";
import "android.text.SpannableStringBuilder";
import "android.text.style.ImageSpan";
import "java.util.regex.Pattern";
import "java.util.regex.Matcher";
--以上都是导入一些需要的类


function EditText4Bitmap(id, rexgString, myBitmap)
	local text = i:ug(id, "text") -- 获取编辑框文字
	local builder = SpannableStringBuilder(text) -- 实例化 SpannableStringBuilder 类
	local pattern = Pattern:compile(rexgString)
	local matcher = pattern:matcher(text)

	-- 存储所有匹配项的位置
	local matches = {}

	-- 先查找所有匹配项
	while matcher:find() do
		table.insert(matches, {startPos = matcher:start(), endPos = i:java(matcher, "java.util.regex.Matcher.end")})
	end

	-- **倒序替换**，防止索引偏移影响匹配
	for i = #matches, 1, -1 do
		local imagespan = ImageSpan(myBitmap)
		builder:setSpan(imagespan, matches[i].startPos, matches[i].endPos, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE)
	end

	-- 只有当 `matches` 不为空时，才更新文本内容，避免空匹配导致错误
	if #matches > 0 then
		i:gvs(id):setText(builder)
	end
end