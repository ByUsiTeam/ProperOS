import org.json.JSONArray;

// 处理 JSONArray 的入口方法
public static String processAttributes(JSONArray jsonArray) {
	if (jsonArray == null || jsonArray.length() == 0) {
		return "";
	}
	
	// 使用 StringBuilder 高效拼接
	StringBuilder sb = new StringBuilder();
	
	for (int i = 0; i < jsonArray.length(); i++) {
		// 添加当前属性
		sb.append(jsonArray.getString(i));
		
		// 如果不是最后一个元素，添加分隔符
		if (i < jsonArray.length() - 1) {
			sb.append("\n");
		}
	}
	
	return sb.toString();
}

// 处理 JSON 字符串的入口方法
public static String processAttributes(String jsonString) {
	try {
		JSONArray jsonArray = new JSONArray(jsonString);
		return processAttributes(jsonArray);
	} catch (Exception e) {
		e.printStackTrace();
		return ""; // 或抛出自定义异常
	}
}

// 处理字符串数组的入口方法
public static String processAttributes(String[] attributes) {
	if (attributes == null || attributes.length == 0) {
		return "";
	}
	
	StringBuilder sb = new StringBuilder();
	for (int i = 0; i < attributes.length; i++) {
		sb.append(attributes[i]);
		if (i < attributes.length - 1) {
			sb.append("\\\\n");
		}
	}
	return sb.toString();
}