fn update(y)

f(y == "true")
{
  t()
  {
    fr("@version.txt",bd_v)
    hs("https://gitee.com/api/v5/repos/byusi/properos/releases/latest?access_token=e41479a1b72747f25afd246fbe8adb09",url)
    f(url != null)
    {
      json(url,data)
      json(data,"get","tag_name",v)
      f(bd_v != v)
      {
        json(data,"get","body",jianj)
        json(data,"list","assets",list)
        json(list,"size",size)
        w(size &gt; 0)
        {
          s-(1,size)
          json(list,"data",size,item)
          json(item,"get","browser_download_url",durl)
          json(item,"get","name",apk_name)
          slower(apk_name,n)
          f(n *? ".apk")
          {
            ufnsui()
            {
              utw(null,"更新提示",jianj,"下载更新","取消更新",false,v)
              {
                fw("$ProperOS/update/base.apk","1")
                fd("$ProperOS/update/base.apk",y)
                fdir("$ProperOS/update/base.apk",lj)
                fn lib.xzq("下载更新",durl,lj,jianj)
              }
              else
              {
                endutw()
              }
            }
          }
        }
      }
      else f(v == bd_v)
      {
        ufnsui()
        {
          fn tw.tw2("无可更新版本",2)
        }
      }
      else
      {
        ufnsui()
        {
          fn tw.tw2(data,1)
        }
      }
    }
    else
    {
      ufnsui()
      {
        utw(null,"","请检查网络","确定",false,v)
        {
          endutw()
        }
      }
    }
  }
}

end fn

fn install(jspk)

f(jspk != null)
{
  fuz(jspk,"MainIndex.json","$temp",fuzjspk)
  f(fuzjspk == true)
  {
    fr("$temp/MainIndex.json",nr)
    json(nr,json)
    json(json,"get","name",name)
    json(json,"get","package",package)
    //存储jspk文件
    ss("$data/app/jspk/"+package+"/base.jspk",base)
    fc(jspk,base,yz)
    //
    ss("$JuOS/data/app/"+package,dataapp)
    fuzs(jspk,dataapp,dapp)
    f(dapp == true)
    {
      ss("$JuOS/hemo/桌面/"+name+".alink",lj)
      fc("$temp/MainIndex.json",lj,iu)
    }
    else
    {
      fn tw.tw("解压安装程序失败")
    }
  }
  else
  {
    fn tw.tw("主文件解压失败")
  }
}
else
{
  fn tw.tw("无 .jspk 文件路径")
}

end fn